#! /bin/bash

set -x

. /init-shell

export PYTHONDONTWRITEBYTECODE=yes
export PGHOST=/tmp
setsid pg_ctl start -D $PGDATA -w -o "-k /tmp -p $PGPORT -c listen_addresses=127.0.0.1"
createdb $PGDATABASE --owner $USERNAME

redis-server --daemonize yes

cd
mkdir -p data
cat <<EOF > "$COPR_CONFIG"
DATA_DIR= "$(pwd)/data"
SQLALCHEMY_DATABASE_URI = 'postgresql+psycopg2://praiskup@/coprdb?client_encoding=utf8'
BACKEND_BASE_URL = 'http://copr-be.cloud.fedoraproject.org'
PUBLIC_COPR_HOSTNAME = "$FE_HOST"
DIST_GIT_CLONE_URL = "https://copr-dist-git-dev.fedorainfracloud.org/git"
FAS_LOGIN = True
KRB5_LOGIN = {
    'RH': {
        'URI':          "redhat",
        'log_text':     "Krb5 login",
        'email_domain': "redhat.com",
    }
}
COPR_DIST_GIT_LOGS_URL = "https://example.com"
SQLALCHEMY_ECHO = False
DEBUG_CHECKPOINTS = True
EOF

cd $CODE

sql_file=/copr.init.d/sql-file.xz

only_history=false
if test -f "$sql_file"; then
    xz -d < "$sql_file" | psql -d coprdb
    only_history=true
else
    ./manage.py create_db --alembic alembic.ini
fi

while read line; do
    $only_history || $line
    echo "$line" >> ~/.bash_history
    echo "$line"
done <<EOF
./manage.py create_chroot fedora-rawhide-x86_64
./manage.py create_chroot fedora-rawhide-i386
./manage.py create_chroot epel-7-x86_64
./manage.py create_chroot epel-7-i386
EOF

# Other useful history commands:
cat >> ~/.bash_history <<EOF
./manage.py create_db --alembic alembic.ini
FLASK_ENV=development ./manage.py runserver -p $PORT -h 0.0.0.0 --reload
pg_ctl start -D $PGDATA -w -o "-k /tmp -p $PGPORT"
EOF

cat >> ~/.psqlrc <<'EOF'
\pset linestyle unicode
\pset border 2

-- Switch pagers with :x and :xx commands
\set x '\\setenv PAGER less'
\set xx '\\setenv PAGER \'pspg -bX --no-mouse\''
:xx
EOF

alembic-3 upgrade head

FLASK_ENV=development ./manage.py runserver -p "$PORT" -h 0.0.0.0 --reload

# Get a shell instead of exit ..
bash
